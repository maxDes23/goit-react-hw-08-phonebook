{"version":3,"file":"static/js/541.b7f5ff67.chunk.js","mappings":"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","sources":["redux/tasks/operations.jsx","components/Task/Task.jsx","redux/tasks/selectors.jsx","components/TaskList/TaskList.jsx","components/TaskEditor/TaskEditor.jsx","pages/Tasks.jsx"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// GET @ /tasks\nexport const fetchTasks = createAsyncThunk(\n  'tasks/fetchAll',\n  async (_, thunkAPI) => {\n    try {\n      const res = await axios.get('/tasks');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n// POST @ /tasks\nexport const addTask = createAsyncThunk(\n  'tasks/addTask',\n  async (text, thunkAPI) => {\n    try {\n      const response = await axios.post('/tasks', { text });\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n\n// DELETE @ /tasks/:id\nexport const deleteTask = createAsyncThunk(\n  'tasks/deleteTask',\n  async (taskId, thunkAPI) => {\n    try {\n      const response = await axios.delete(`/tasks/${taskId}`);\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n","import { useDispatch } from 'react-redux';\nimport { deleteTask } from '../../redux/tasks/operations';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid #ccc;\n  padding: 8px;\n  margin-bottom: 8px;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n`;\n\nconst Button = styled.button`\n  padding: 8px;\n  cursor: pointer;\n  background-color: #ff5757;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n`;\n\nconst Task = ({ id, text }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteTask(id));\n\n  return (\n    <Wrapper>\n      <Text>{text}</Text>\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default Task;\n","export const selectLoading = state => state.tasks.loading;\n\nexport const selectFilter = state => state.tasks.filter;\n\nexport const selectAllTasks = state => state.tasks.items;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Task from '../Task/Task';\nimport { selectAllTasks } from '../../redux/tasks/selectors';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst ListItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const TaskList = () => {\n  const tasks = useSelector(selectAllTasks);\n\n  return (\n    <List>\n      {tasks.map(({ id, text }) => (\n        <ListItem key={id}>\n          <Task id={id} text={text} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from '../../redux/tasks/operations';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  margin-bottom: 16px;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  padding: 8px;\n`;\n\nconst Button = styled.button`\n  padding: 8px;\n  background-color: #4caf50;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n`;\n\nconst TaskEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const text = form.elements.text.value;\n    if (text.trim() !== '') {\n      dispatch(addTask(text));\n      form.reset();\n    } else {\n      alert('Task cannot be empty. Enter some text!');\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input name=\"text\" placeholder=\"Enter your task\" />\n      <Button type=\"submit\">Add task</Button>\n    </Form>\n  );\n};\n\nexport default TaskEditor;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { TaskList } from 'components/TaskList/TaskList';\nimport TaskEditor from 'components/TaskEditor/TaskEditor';\nimport { fetchTasks } from '../redux/tasks/operations';\nimport { selectLoading } from '../redux/tasks/selectors';\nimport styled from 'styled-components';\n\nconst LoadingMessage = styled.div`\n  margin-top: 10px;\n  font-weight: bold;\n`;\n\nconst TasksContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst Tasks = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <TaskEditor />\n      <TasksContainer>\n        {isLoading && <LoadingMessage>Request in progress...</LoadingMessage>}\n      </TasksContainer>\n      <TaskList />\n    </>\n  );\n};\n\nexport default Tasks;\n"],"names":["fetchTasks","createAsyncThunk","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_","thunkAPI","res","_context","prev","next","axios","sent","abrupt","data","t0","rejectWithValue","message","stop","_x","_x2","apply","arguments","addTask","_ref2","_callee2","text","response","_context2","_x3","_x4","deleteTask","_ref3","_callee3","taskId","_context3","concat","_x5","_x6","Wrapper","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","Button","_templateObject3","id","dispatch","useDispatch","_jsxs","children","_jsx","type","onClick","selectLoading","state","tasks","loading","selectAllTasks","items","List","ListItem","TaskList","useSelector","map","Task","Form","Input","onSubmit","e","preventDefault","form","currentTarget","elements","value","trim","reset","alert","name","placeholder","LoadingMessage","TasksContainer","isLoading","useEffect","_Fragment","Helmet","TaskEditor"],"sourceRoot":""}