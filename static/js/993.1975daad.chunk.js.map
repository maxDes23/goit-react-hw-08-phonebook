{"version":3,"file":"static/js/993.1975daad.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from '../../redux/contacts/operations';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 5px;\n  padding: 20px;\n  background-color: #addeeb;\n\n  label {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10px;\n  }\n\n  input {\n    padding: 10px;\n    margin-top: 5px;\n  }\n\n  button {\n    padding: 8px;\n    margin-top: 10px;\n    cursor: pointer;\n  }\n`;\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = evt => {\n    setName(evt.target.value);\n  };\n\n  const handleNumberChange = evt => {\n    setNumber(evt.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name || !number) {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (existingContact) {\n      alert('Contact with the same name already exists!');\n      return;\n    }\n\n    dispatch(addContacts({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          required\n          placeholder=\"Name\"\n        />\n      </label>\n      <label>\n        Number:\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleNumberChange}\n          required\n          placeholder=\"0123456789\"\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  list-style-type: none;\n  padding: 0;\n\n  li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n    padding: 10px 0;\n    border-bottom: 1px solid #ccc;\n\n    button {\n      padding: 5px;\n      border-radius: 5px;\n      cursor: pointer;\n    }\n  }\n`;\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  if (!contacts || !Array.isArray(contacts)) {\n    return null;\n  }\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <button type=\"button\" onClick={() => deleteContact(contact.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\ndisplay: flex;\nflex-direction: column;\nrow-gap: 10px;\ntext-align: center;\n\ninput {\n  padding: 8px;\n  margin-bottom: 10px;\n  margin-left: 10px;\n};\n  \n`;\n\nconst Filter = ({ value, onChange }) => (\n  <StyledLabel>\n    Find contacts by name:\n    <input\n      type=\"text\"\n      placeholder=\"Search contacts\"\n      value={value}\n      onChange={onChange}\n    />\n  </StyledLabel>\n);\n\nexport default Filter;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { Box, Container, CssBaseline } from '@mui/material';\n\nimport { deleteContact } from '../redux/contacts/operations';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState('');\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const handleFilterChange = e => {\n    setFilter(e.target.value);\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <Container fixed>\n        <Box\n          sx={{\n            bgcolor: '#ECC424',\n            color: '#314448',\n            width: '25vw',\n            marginTop: '20px',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            padding: '16px',\n            borderRadius: '12px',\n          }}\n        >\n          <ContactForm />\n          <Filter value={filter} onChange={handleFilterChange} />\n          <ContactList\n            contacts={filteredContacts}\n            deleteContact={handleDeleteContact}\n          />\n        </Box>\n      </Container>\n    </>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","contacts","useSelector","state","items","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_jsxs","onSubmit","e","preventDefault","find","contact","toLowerCase","alert","addContacts","children","_jsx","type","value","onChange","evt","target","required","placeholder","List","_ref","deleteContact","Array","isArray","map","onClick","id","StyledLabel","ContactsPage","filter","setFilter","filteredContacts","includes","_Fragment","CssBaseline","Container","fixed","Box","sx","bgcolor","color","width","marginTop","marginLeft","marginRight","padding","borderRadius","ContactForm","Filter","ContactList","contactId"],"sourceRoot":""}