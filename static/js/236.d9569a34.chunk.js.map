{"version":3,"file":"static/js/236.d9569a34.chunk.js","mappings":"+XAgBMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+GAOzBC,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAWM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+EAMvBI,GAAeP,EAAAA,EAAAA,IAAOQ,EAAAA,EAAPR,CAAcS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0BAI7BO,GAAiBV,EAAAA,EAAAA,IAAOW,EAAAA,EAAPX,CAAgBY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,kCAIxB,SAASU,IACtB,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAChBI,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,YAAY,GAEdC,SAAS,WAAD,IAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAC,EAAMC,GAAM,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKC,EAAAA,EAAAA,KACrB,wCACAL,GACA,KAAD,EAHKC,EAAQC,EAAAI,KAKdC,QAAQC,IAAIP,EAASQ,MAAMP,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAE3Bf,EAASe,EAAAQ,GAAMT,SAASQ,KAAKE,SAAW,2GAAsB,yBAAAT,EAAAU,OAAA,GAAAb,EAAA,kBAEjE,gBAAAc,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,EAXQ,KAcX,OACEC,EAAAA,EAAAA,KAACjD,EAAU,CAAAkD,UACTD,EAAAA,EAAAA,KAAC5C,EAAS,CAAA6C,UACRD,EAAAA,EAAAA,KAAA,QAAMrB,SAAUP,EAAO8B,aAAaD,UAClCE,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,QAAS,EAAGC,MAAM,aAAYL,SAAA,EACpCE,EAAAA,EAAAA,MAACI,EAAAA,GAAW,CAAAN,SAAA,EACVD,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACC,QAAQ,QAAOR,SAAC,mBAC3BD,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CACJC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,QAAQ,SACRC,SAAU3C,EAAO4C,aACjBC,MAAO7C,EAAOY,OAAOT,YAGzB4B,EAAAA,EAAAA,MAACI,EAAAA,GAAW,CAAAN,SAAA,EACVD,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACC,QAAQ,WAAUR,SAAC,cAC9BD,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CACJC,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,QAAQ,SACRC,SAAU3C,EAAO4C,aACjBC,MAAO7C,EAAOY,OAAOR,eAGzB2B,EAAAA,EAAAA,MAACI,EAAAA,GAAW,CAAAN,SAAA,EACVD,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACC,QAAQ,kBAAiBR,SAAC,sBACrCD,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CACJC,GAAG,kBACHC,KAAK,kBACLC,KAAK,WACLC,QAAQ,SACRC,SAAU3C,EAAO4C,aACjBC,MAAO7C,EAAOY,OAAOP,sBAGzBuB,EAAAA,EAAAA,KAACtC,EAAc,CACbiD,GAAG,aACHC,KAAK,aACLG,SAAU3C,EAAO4C,aACjBE,UAAW9C,EAAOY,OAAON,WACzByC,YAAY,SAAQlB,SACrB,mCAGDD,EAAAA,EAAAA,KAACzC,EAAY,CAACsD,KAAK,SAASM,YAAY,SAAQlB,SAAC,aAGhD/B,IAAS8B,EAAAA,EAAAA,KAAA,KAAGoB,MAAO,CAAEC,MAAO,OAAQpB,SAAE/B,YAMnD,CC/GA,IAAMoD,EAAYtE,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mHAkB5B,EAXiB,WACf,OACEgD,EAAAA,EAAAA,MAACmB,EAAS,CAAArB,SAAA,EACRD,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CAAAtB,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,oBAETD,EAAAA,EAAAA,KAACwB,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { useFormik } from 'formik';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\n\n\nconst StyledFlex = styled(Flex)`\n  background-color: gray.100;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledBox = styled(Box)`\n  background-color: white;\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nconst StyledButton = styled(Button)`\n  width: full;\n`;\n\nconst StyledCheckbox = styled(Checkbox)`\n  margin-bottom: 16px;\n`;\n\nexport default function Register() {\n  const [error, setError] = useState(null);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      agreeTerms: false,\n    },\n    onSubmit: async values => {\n      try {\n        const response = await axios.post(\n          'URL_TO_YOUR_BACKEND_REGISTER_ENDPOINT',\n          values\n        );\n\n        console.log(response.data);\n      } catch (error) {\n        setError(error.response.data.message || 'Помилка реєстрації');\n      }\n    },\n  });\n\n  return (\n    <StyledFlex>\n      <StyledBox>\n        <form onSubmit={formik.handleSubmit}>\n          <VStack spacing={4} align=\"flex-start\">\n            <FormControl>\n              <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                variant=\"filled\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n              />\n            </FormControl>\n            <FormControl>\n              <FormLabel htmlFor=\"password\">Password</FormLabel>\n              <Input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                variant=\"filled\"\n                onChange={formik.handleChange}\n                value={formik.values.password}\n              />\n            </FormControl>\n            <FormControl>\n              <FormLabel htmlFor=\"confirmPassword\">Confirm Password</FormLabel>\n              <Input\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                variant=\"filled\"\n                onChange={formik.handleChange}\n                value={formik.values.confirmPassword}\n              />\n            </FormControl>\n            <StyledCheckbox\n              id=\"agreeTerms\"\n              name=\"agreeTerms\"\n              onChange={formik.handleChange}\n              isChecked={formik.values.agreeTerms}\n              colorScheme=\"purple\"\n            >\n              Agree to Terms and Conditions\n            </StyledCheckbox>\n            <StyledButton type=\"submit\" colorScheme=\"purple\">\n              Register\n            </StyledButton>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n          </VStack>\n        </form>\n      </StyledBox>\n    </StyledFlex>\n  );\n}\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport  RegisterForm  from 'components/RegisterForm/RegisterForm';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  min-height: calc(100vh - 50px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Register = () => {\n  return (\n    <Container>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </Container>\n  );\n};\n\nexport default Register;\n"],"names":["StyledFlex","styled","Flex","_templateObject","_taggedTemplateLiteral","StyledBox","Box","_templateObject2","StyledButton","Button","_templateObject3","StyledCheckbox","Checkbox","_templateObject4","Register","_useState","useState","_useState2","_slicedToArray","error","setError","formik","useFormik","initialValues","email","password","confirmPassword","agreeTerms","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","values","response","_context","prev","next","axios","sent","console","log","data","t0","message","stop","_x","apply","arguments","_jsx","children","handleSubmit","_jsxs","VStack","spacing","align","FormControl","FormLabel","htmlFor","Input","id","name","type","variant","onChange","handleChange","value","isChecked","colorScheme","style","color","Container","Helmet","RegisterForm"],"sourceRoot":""}